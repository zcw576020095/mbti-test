from django.core.management.base import BaseCommand
from mbti.models import Question, Questionnaire, TypeProfile


SAMPLE_QUESTIONS = [
    # IE 外向/内向（社交能量）- 20题
    ("社交后你能量提升而非消耗殆尽？", "IE", "E"),
    ("面对陌生人你通常主动开启话题？", "IE", "E"),
    ("独处能帮助你恢复精力而非感到孤独？", "IE", "I"),
    ("你更愿意在团队中表达观点而非默默观察？", "IE", "E"),
    ("长时间聚会后你更想继续交流而非回家休息？", "IE", "E"),
    ("见到新朋友你更倾向于倾听而非率先分享？", "IE", "I"),
    ("你喜欢成为聚会的焦点而非安静地观察？", "IE", "E"),
    ("工作时你更喜欢开放式办公而非独立空间？", "IE", "E"),
    ("你经常主动联系朋友而非等待他们联系你？", "IE", "E"),
    ("思考问题时你更愿意独自深入而非与人讨论？", "IE", "I"),
    ("你在大型会议中更愿意发言而非倾听？", "IE", "E"),
    ("休息时间你更喜欢独自阅读而非与人聊天？", "IE", "I"),
    ("你更容易与陌生人建立联系而非保持距离？", "IE", "E"),
    ("压力大时你更愿意独处调节而非寻求他人支持？", "IE", "I"),
    ("你更享受热闹的环境而非安静的氛围？", "IE", "E"),
    ("你更喜欢小群体深度交流而非大型聚会？", "IE", "I"),
    ("工作中你更愿意通过邮件沟通而非面对面交流？", "IE", "I"),
    ("你更容易在人群中感到兴奋而非疲惫？", "IE", "E"),
    ("你更喜欢在安静的环境中工作而非嘈杂的空间？", "IE", "I"),
    ("你更愿意参加各种社交活动而非宅在家里？", "IE", "E"),

    # SN 现实/直觉（信息偏好）- 20题
    ("工作中你更信赖事实与流程而非设想与可能？", "SN", "S"),
    ("你经常从细节推断整体而非从整体联想细节？", "SN", "S"),
    ("计划时你更重视长远趋势与潜在机会？", "SN", "N"),
    ("遇到问题你先分析现状而非想象新的可能性？", "SN", "S"),
    ("你喜欢探索创意点子而非固守既有方法？", "SN", "N"),
    ("你更享受实际成果而非概念模型本身？", "SN", "S"),
    ("学习新知识时你更关注理论框架而非具体应用？", "SN", "N"),
    ("你更相信直觉感受而非数据分析？", "SN", "N"),
    ("做决定时你更依赖过往经验而非未来可能？", "SN", "S"),
    ("你更喜欢抽象思考而非具体操作？", "SN", "N"),
    ("阅读时你更关注字里行间的含义而非表面信息？", "SN", "N"),
    ("你更擅长发现事物之间的联系而非关注细节？", "SN", "N"),
    ("工作中你更重视创新突破而非稳定执行？", "SN", "N"),
    ("你更喜欢按部就班的流程而非灵活变通？", "SN", "S"),
    ("你更关注当下的实际需求而非长远的愿景？", "SN", "S"),
    ("你更喜欢处理具体的数据而非抽象的概念？", "SN", "S"),
    ("你更容易被新奇的想法吸引而非传统方法？", "SN", "N"),
    ("你更重视实用性而非创新性？", "SN", "S"),
    ("你更喜欢探讨可能性而非现实情况？", "SN", "N"),
    ("你更关注事物的本质而非表面现象？", "SN", "N"),

    # TF 思考/情感（决策方式）- 20题
    ("做决定时你更注重客观标准而非个人感受？", "TF", "T"),
    ("评估方案你更看重效率与逻辑一致性？", "TF", "T"),
    ("与人协作你优先考虑他人感受与关系稳定？", "TF", "F"),
    ("冲突时你倾向于理性分析而非安抚与妥协？", "TF", "T"),
    ("你会为维护团队氛围调整原有决定？", "TF", "F"),
    ("你更看重公平一致而非个别情况的照顾？", "TF", "T"),
    ("批评他人时你更直接指出问题而非委婉表达？", "TF", "T"),
    ("你更容易被逻辑说服而非情感打动？", "TF", "T"),
    ("做选择时你更考虑对所有人的影响而非最优解？", "TF", "F"),
    ("你更重视工作效率而非同事关系？", "TF", "T"),
    ("面对不公时你更愿意据理力争而非息事宁人？", "TF", "T"),
    ("你更容易原谅他人的错误而非坚持原则？", "TF", "F"),
    ("团队决策时你更关注可行性而非成员感受？", "TF", "T"),
    ("你更愿意帮助他人解决情感问题而非技术问题？", "TF", "F"),
    ("你认为诚实比善意的谎言更重要？", "TF", "T"),
    ("你更重视个人价值观而非客观标准？", "TF", "F"),
    ("你更容易同情他人的处境而非保持客观？", "TF", "F"),
    ("你更喜欢和谐的氛围而非激烈的辩论？", "TF", "F"),
    ("你更重视逻辑分析而非直觉判断？", "TF", "T"),
    ("你更愿意为了他人的感受而妥协？", "TF", "F"),

    # JP 判断/知觉（生活方式）- 20题
    ("你偏好提前制定计划并按部就班执行？", "JP", "J"),
    ("临时变化会让你感到不适而非兴奋？", "JP", "J"),
    ("你喜欢保留选择并根据情况灵活调整？", "JP", "P"),
    ("任务完成前你需要明确的截止与清单？", "JP", "J"),
    ("旅行时你更喜欢即兴探索而非严格行程？", "JP", "P"),
    ("你经常把事情留到最后一刻以寻求弹性？", "JP", "P"),
    ("你更喜欢有序的工作环境而非随意的布置？", "JP", "J"),
    ("开始新项目前你更愿意充分准备而非边做边学？", "JP", "J"),
    ("你更享受完成任务的成就感而非探索过程？", "JP", "J"),
    ("面对截止日期你更愿意提前完成而非压线提交？", "JP", "J"),
    ("你更喜欢开放式的时间安排而非固定的日程？", "JP", "P"),
    ("购物时你更愿意货比三家而非快速决定？", "JP", "P"),
    ("你更容易适应突发状况而非感到焦虑？", "JP", "P"),
    ("工作中你更喜欢多任务并行而非专注单一？", "JP", "P"),
    ("你更重视过程的灵活性而非结果的确定性？", "JP", "P"),
    ("你更喜欢制定详细的计划而非随机应变？", "JP", "J"),
    ("你更容易在有结构的环境中工作而非自由发挥？", "JP", "J"),
    ("你更喜欢按时完成任务而非延期处理？", "JP", "J"),
    ("你更愿意保持选择的开放性而非早做决定？", "JP", "P"),
    ("你更享受探索新可能而非执行既定计划？", "JP", "P"),
]


class Command(BaseCommand):
    help = "Seed MBTI questions"

    def handle(self, *args, **kwargs):
        qnn, _ = Questionnaire.objects.get_or_create(key="default", defaults={"name": "默认问卷"})
        created = 0
        for idx, (text, dim, pole) in enumerate(SAMPLE_QUESTIONS, start=1):
            obj, was_created = Question.objects.get_or_create(
                text=text, dimension=dim, defaults={"keyed_pole": pole, "order": idx, "questionnaire": qnn}
            )
            if not was_created:
                obj.keyed_pole = pole
                obj.order = idx
                obj.questionnaire = qnn
                obj.active = True
                obj.save()
            else:
                created += 1

        # 预置部分类型档案占位
        for code in ["INTJ","INTP","ENTJ","ENTP","INFJ","INFP","ENFJ","ENFP","ISTJ","ISFJ","ESTJ","ESFJ","ISTP","ISFP","ESTP","ESFP"]:
            TypeProfile.objects.get_or_create(code=code)

        self.stdout.write(self.style.SUCCESS(f"Seeded {created} questions and initialized questionnaire/types"))